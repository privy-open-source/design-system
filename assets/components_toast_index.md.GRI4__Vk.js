import{_ as n}from"./chunks/Button.vue_vue_type_script_setup_true_lang.3Ev7LJQj.js";/* empty css                                                      */import{_ as k}from"./chunks/Toast.vue_vue_type_style_index_0_lang.CBDSZJ9V.js";import{t as a}from"./chunks/index.COFoC6VJ.js";import{_ as m,o as g,c as y,m as h,a7 as e,I as i,w as t,p,D as b,b as l}from"./chunks/framework.SPHuL2wz.js";/* empty css                                                      */import"./chunks/index.DvWHfs5K.js";import"./chunks/SpinnerRinggo.vue_vue_type_script_setup_true_lang.D-OV2fzw.js";import"./chunks/index.CxC42Yo0.js";import"./chunks/purify.es.D5NNr_j3.js";import"./chunks/defu.CMw4_7D2.js";import"./chunks/16.B9F8soTy.js";import"./chunks/index.CO8iijMR.js";import"./chunks/use-singleton.BlOnuHTI.js";import"./chunks/queue.DLTVddtq.js";import"./chunks/noop.DX6rZLP_.js";import"./chunks/index.viQdWA7x.js";import"./chunks/20.DPORPCuh.js";import"./chunks/20.C9rmOJn2.js";import"./chunks/20.DK0ZmXUB.js";const f={},C={xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",fill:"none",class:"persona-icon",viewBox:"0 0 16 16"};function x(u,r){return g(),y("svg",C,r[0]||(r[0]=[h("path",{fill:"currentColor","fill-rule":"evenodd",d:"M12.616 4.632a.5.5 0 0 1 .03.706l-5.5 6a.5.5 0 0 1-.737 0L3.354 8.005a.5.5 0 1 1 .737-.676l2.687 2.931 5.131-5.598a.5.5 0 0 1 .707-.03","clip-rule":"evenodd"},null,-1)]))}const E=m(f,[["render",x]]),v={class:"flex mt-3"},B={class:"flex mt-3"},A={class:"grid grid-cols-3 gap-3 mt-3"},w={class:"mt-3 space-x-5"},D={class:"mt-3"},P={class:"mt-3"},q={class:"mt-3"},X=JSON.parse('{"title":"Toast · Components","description":"Simple notification pop-up.","frontmatter":{"title":"Toast · Components","description":"Simple notification pop-up."},"headers":[],"relativePath":"components/toast/index.md","filePath":"components/toast/index.md"}'),S={name:"components/toast/index.md"},Z=Object.assign(S,{setup(u){async function r(){let c=0;const s=await a.withProgress("Uploading..."),d=setInterval(()=>{c>=100&&(clearInterval(d),s.close(),a("Upload successfully")),s.setProgress(`${++c}%`)},50)}return(c,s)=>{const d=b("preview");return g(),y("div",null,[s[18]||(s[18]=e('<h1 id="toast" tabindex="-1">Toast <a class="header-anchor" href="#toast" aria-label="Permalink to &quot;Toast&quot;">​</a></h1><blockquote><p>Simple notification pop-up.</p></blockquote><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="simple-usage" tabindex="-1">Simple Usage <a class="header-anchor" href="#simple-usage" aria-label="Permalink to &quot;Simple Usage&quot;">​</a></h3>',4)),h("div",v,[i(n,{color:"info",onClick:s[0]||(s[0]=o=>p(a)({text:"Far far away, behind the word.",duration:-1}))},{default:t(()=>s[9]||(s[9]=[l(" Show Toast ")])),_:1})]),s[19]||(s[19]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { toast } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@privyid/persona/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Far far away, behind the word.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="advance-usage" tabindex="-1">Advance Usage <a class="header-anchor" href="#advance-usage" aria-label="Permalink to &quot;Advance Usage&quot;">​</a></h3>`,2)),h("div",B,[i(n,{color:"info",onClick:s[1]||(s[1]=o=>p(a)({text:"Far far away, behind the word.",duration:5e3,position:"bottom-right"}))},{default:t(()=>s[10]||(s[10]=[l(" Show Toast ")])),_:1})]),s[20]||(s[20]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { toast } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@privyid/persona/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  text    : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Far far away, behind the word.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  duration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  position: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bottom-right&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="position" tabindex="-1">Position <a class="header-anchor" href="#position" aria-label="Permalink to &quot;Position&quot;">​</a></h2><p>There available 3 position for toast: <code>bottom-left</code>, <code>bottom-center</code>, <code>bottom-right</code> default is <code>bottom-left</code></p><p><strong>Try it:</strong></p>`,4)),h("div",A,[i(n,{class:"items-center",color:"info",onClick:s[2]||(s[2]=o=>p(a)({text:"Far far away, behind the word.",position:"bottom-left"}))},{default:t(()=>s[11]||(s[11]=[l(" Bottom Left ")])),_:1}),i(n,{class:"items-center",color:"info",onClick:s[3]||(s[3]=o=>p(a)({text:"Far far away, behind the word.",position:"bottom-center"}))},{default:t(()=>s[12]||(s[12]=[l(" Bottom Center ")])),_:1}),i(n,{class:"items-center",color:"info",onClick:s[4]||(s[4]=o=>p(a)({text:"Far far away, behind the word.",position:"bottom-right"}))},{default:t(()=>s[13]||(s[13]=[l(" Bottom Right ")])),_:1})]),s[21]||(s[21]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { toast } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@privyid/persona/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bottom-left</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  text    : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Far far away, behind the word.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  position: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bottom-left&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bottom-center</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  text    : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Far far away, behind the word.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  position: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bottom-center&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bottom-right</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  text    : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Far far away, behind the word.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  position: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bottom-right&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="icon" tabindex="-1">Icon <a class="header-anchor" href="#icon" aria-label="Permalink to &quot;Icon&quot;">​</a></h2><p>It&#39;s possible to custom icon of toast, like color and icon-name. There are 6 icon colors available for toast: <code>default</code>, <code>primary</code>, <code>info</code>, <code>success</code>, <code>warning</code> and <code>danger</code>. Default icon color is toast icon color it&#39;s self.</p>`,3)),i(d,null,{default:t(()=>[i(k,{text:"Member added to the group",icon:E,"icon-color":"success"})]),_:1}),h("div",w,[i(n,{color:"info",onClick:s[5]||(s[5]=o=>p(a)({text:"Member added to the group",icon:E,iconColor:"success"}))},{default:t(()=>s[14]||(s[14]=[l(" Show toast ")])),_:1})]),s[22]||(s[22]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { toast } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@privyid/persona/core&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IconSuccess </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@privyid/persona-icon/vue/checkmark/24.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  text     : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Member added to the group&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  icon     : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">markRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(IconSuccess),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  iconColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;success&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="dismissable" tabindex="-1">Dismissable <a class="header-anchor" href="#dismissable" aria-label="Permalink to &quot;Dismissable&quot;">​</a></h2><p>Dismiss button of toast can be show or hide by <code>dismissable</code> props. If <code>dismissable</code> set to <code>true</code>, dismiss button will show.</p>`,3)),i(d,{class:"flex-col items-center space-y-3"},{default:t(()=>[i(k,{dismissable:!1,variant:"filled",text:"Lorem ipsum dolor sit amet."})]),_:1}),s[23]||(s[23]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { toast } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@privyid/persona/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  text       : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Lorem ipsum dolor sit amet.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  variant    : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;filled&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dismissable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="actions" tabindex="-1">Actions <a class="header-anchor" href="#actions" aria-label="Permalink to &quot;Actions&quot;">​</a></h2><p>Add additional button using option <code>actions</code>.</p>`,3)),i(d,null,{default:t(()=>[i(k,{text:"Upload document successfully.",actions:[{text:"Goto Doc"}]})]),_:1}),h("div",D,[i(n,{type:"",color:"info",onClick:s[6]||(s[6]=o=>p(a)({text:"Upload document successfully.",actions:[{text:"Goto Doc",onClick(F){F.close()}}]}))},{default:t(()=>s[15]||(s[15]=[l(" With Action ")])),_:1})]),s[24]||(s[24]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  text   : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Upload document successfully.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  actions: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Goto Doc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      onClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Do something</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        event.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="progress" tabindex="-1">Progress <a class="header-anchor" href="#progress" aria-label="Permalink to &quot;Progress&quot;">​</a></h2><p>Show loading progress using toast with <code>.runProgress</code>.</p>`,3)),i(d,null,{default:t(()=>[i(k,{text:"Uploading...",loading:"","loading-text":"75%",dismissable:!1})]),_:1}),h("div",P,[i(n,{type:"",color:"info",onClick:s[7]||(s[7]=o=>r())},{default:t(()=>s[16]||(s[16]=[l(" With Progress ")])),_:1})]),s[25]||(s[25]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { toast } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@privyid/persona/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> doUpload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> progressToast</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> toast.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Uploading...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> axios.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/endpoint/url&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, formData, {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    onUploadProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">progressEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> progress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((progressEvent.loaded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> progressEvent.total)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      progressToast.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">progress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}%\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  progressToast.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Upload successfully&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="customization" tabindex="-1">Customization <a class="header-anchor" href="#customization" aria-label="Permalink to &quot;Customization&quot;">​</a></h2><p>You can add some custom class to Toast element via <code>toastClass</code> and <code>toastAttrs</code>.</p>`,3)),h("div",q,[i(n,{type:"",color:"info",onClick:s[8]||(s[8]=o=>p(a)({text:"A wonderful serenity has taken.",toastClass:"h-20",toastAttrs:{"data-e2eid":"toast-upload"}}))},{default:t(()=>s[17]||(s[17]=[l(" Custom Toast ")])),_:1})]),s[26]||(s[26]=e(`<div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { toast } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@privyid/persona/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  text      : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A wonderful serenity has taken.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  toastClass: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;h-20&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  toastAttrs: { </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data-e2eid&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;toast-upload&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="toast-1" tabindex="-1">toast <a class="header-anchor" href="#toast-1" aria-label="Permalink to &quot;toast&quot;">​</a></h3><p><code>toast(options: ToastOptions): Promise&lt;ToastInstance&gt;</code></p><table tabindex="0"><thead><tr><th>Options</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th>Description</th></tr></thead><tbody><tr><td><code>text</code></td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;">-</td><td>Toast text message (support markdown)</td></tr><tr><td><code>position</code></td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;"><code>bottom-left</code></td><td>Position for toast, valid value is <code>bottom-left</code>, <code>bottom-center</code>, <code>top-right</code></td></tr><tr><td><code>duration</code></td><td style="text-align:center;"><code>Number</code></td><td style="text-align:center;"><code>3000</code></td><td>Duration for which the toast should be displayed. <code>-1</code> to permanent toast</td></tr><tr><td><code>icon</code></td><td style="text-align:center;"><code>String</code> or <code>Component</code></td><td style="text-align:center;">-</td><td>Custom toast icon (will replace default icon)</td></tr><tr><td><code>iconColor</code></td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;">-</td><td>Custom color of toast icon, valid value is <code>default</code>, <code>primary</code>, <code>info</code>, <code>success</code>, <code>warning</code>, <code>danger</code></td></tr><tr><td><code>toastClass</code></td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;">-</td><td>Add class to toast component</td></tr><tr><td><code>toastAttrs</code></td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;">-</td><td>Add attribute to toast component</td></tr><tr><td><code>dismissable</code></td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"><code>true</code></td><td>Enable dismiss button</td></tr><tr><td><code>actions</code></td><td style="text-align:center;"><code>Array&lt;ActionOption&gt;</code></td><td style="text-align:center;">-</td><td>Add action button</td></tr></tbody></table><p>In <code>actions</code> contains:</p><table tabindex="0"><thead><tr><th>Props</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th>Description</th></tr></thead><tbody><tr><td><code>text</code></td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;">-</td><td>Action button&#39;s text</td></tr><tr><td><code>attrs</code></td><td style="text-align:center;"><code>Object</code></td><td style="text-align:center;">-</td><td>Action additional attribute</td></tr><tr><td><code>onClick</code></td><td style="text-align:center;"><code>Function</code></td><td style="text-align:center;">-</td><td>Action on-click handler</td></tr></tbody></table><h4 id="shorthand" tabindex="-1">Shorthand <a class="header-anchor" href="#shorthand" aria-label="Permalink to &quot;Shorthand&quot;">​</a></h4><p><code>toast(text: string): Promise&lt;ToastInstance&gt;</code></p><h3 id="withprogress" tabindex="-1">.withProgress <a class="header-anchor" href="#withprogress" aria-label="Permalink to &quot;.withProgress&quot;">​</a></h3><p><code>.withProgress(options: ToastOption): Promise&lt;ToastProgressInstance&gt;</code></p><h4 id="shorthand-1" tabindex="-1">Shorthand <a class="header-anchor" href="#shorthand-1" aria-label="Permalink to &quot;Shorthand&quot;">​</a></h4><p><code>.withProgress(text: string, loadingText?: string): Promise&lt;ToastProgressInstance&gt;</code></p><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h2><ul><li><a href="./../popup/">Popup</a></li></ul>`,15))])}}});export{X as __pageData,Z as default};
